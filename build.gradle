apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'application'

mainClassName = 'cube.App'

sourceCompatibility = 1.8
version = '1.0-' + genVersion()

def static genVersion() {
    return new Date().getTime()
}

repositories {
    mavenCentral()
}

dependencies {
    // h2
    compile('com.h2database:h2:1.+') {
        transitive = false
    }

    // hibernate
    compile('org.hibernate:hibernate-entitymanager:5.+')

    compile('org.jboss.spec.javax.transaction:jboss-transaction-api_1.1_spec:1.0.1.Final') {
        transitive = false
    }

    // joda time
    compile('joda-time:joda-time:2.+') {
        transitive = false
    }

    // guava
    compile('com.google.guava:guava:19.+') {
        transitive = false
    }

    // groovy
    compile('org.codehaus.groovy:groovy-all:2.4.+') {
        transitive = false
    }

    // log4j
    compile('org.apache.logging.log4j:log4j-api:2.4.+') {
        transitive = false
    }

    compile('org.apache.logging.log4j:log4j-core:2.4.+') {
        transitive = false
    }

    // apache commons
    compile('org.apache.commons:commons-lang3:3.+') {
        transitive = false
    }


    testCompile(
        // junit
        'junit:junit:4.11',

        // groovy spock
        'org.spockframework:spock-maven:0.7-groovy-2.0'
    )
}

test {
    testLogging {
        events "passed", "skipped", "failed"
    }
}

// Gradle Aspectj plugin
// See also: https://github.com/eveoh/gradle-aspectj
buildscript {
    repositories {
        maven {
            url "https://maven.eveoh.nl/content/repositories/releases"
        }
    }

    dependencies {
        classpath 'nl.eveoh:gradle-aspectj:1.+'
    }
}

project.ext {
    aspectjVersion = '1.8.+'
}

apply plugin: 'aspectj'

compileAspect {
    xlint = 'warning'
}

// Create jar file with all the dependencies
task fatJar(type: Jar) {
    manifest {
        attributes 'Version': version, 'Main-Class': mainClassName
    }
    baseName = project.name
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    with jar
}
